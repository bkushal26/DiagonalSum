// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sum,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgc2104-1-e,HLS_INPUT_CLOCK=2.778000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.872000,HLS_SYN_LAT=11,HLS_SYN_TPT=12,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2835,HLS_SYN_LUT=4621,HLS_VERSION=2019_1}" *)

module sum (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mat_0_address0,
        mat_0_ce0,
        mat_0_we0,
        mat_0_d0,
        mat_0_q0,
        mat_0_address1,
        mat_0_ce1,
        mat_0_we1,
        mat_0_d1,
        mat_0_q1,
        mat_1_address0,
        mat_1_ce0,
        mat_1_we0,
        mat_1_d0,
        mat_1_q0,
        mat_1_address1,
        mat_1_ce1,
        mat_1_we1,
        mat_1_d1,
        mat_1_q1,
        mat_2_address0,
        mat_2_ce0,
        mat_2_we0,
        mat_2_d0,
        mat_2_q0,
        mat_2_address1,
        mat_2_ce1,
        mat_2_we1,
        mat_2_d1,
        mat_2_q1,
        mat_3_address0,
        mat_3_ce0,
        mat_3_we0,
        mat_3_d0,
        mat_3_q0,
        mat_3_address1,
        mat_3_ce1,
        mat_3_we1,
        mat_3_d1,
        mat_3_q1,
        mat_4_address0,
        mat_4_ce0,
        mat_4_we0,
        mat_4_d0,
        mat_4_q0,
        mat_4_address1,
        mat_4_ce1,
        mat_4_we1,
        mat_4_d1,
        mat_4_q1,
        mat_5_address0,
        mat_5_ce0,
        mat_5_we0,
        mat_5_d0,
        mat_5_q0,
        mat_5_address1,
        mat_5_ce1,
        mat_5_we1,
        mat_5_d1,
        mat_5_q1,
        mat_6_address0,
        mat_6_ce0,
        mat_6_we0,
        mat_6_d0,
        mat_6_q0,
        mat_6_address1,
        mat_6_ce1,
        mat_6_we1,
        mat_6_d1,
        mat_6_q1,
        mat_7_address0,
        mat_7_ce0,
        mat_7_we0,
        mat_7_d0,
        mat_7_q0,
        mat_7_address1,
        mat_7_ce1,
        mat_7_we1,
        mat_7_d1,
        mat_7_q1,
        mat_8_address0,
        mat_8_ce0,
        mat_8_we0,
        mat_8_d0,
        mat_8_q0,
        mat_8_address1,
        mat_8_ce1,
        mat_8_we1,
        mat_8_d1,
        mat_8_q1,
        r,
        c,
        ap_return
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] mat_0_address0;
output   mat_0_ce0;
output   mat_0_we0;
output  [31:0] mat_0_d0;
input  [31:0] mat_0_q0;
output  [3:0] mat_0_address1;
output   mat_0_ce1;
output   mat_0_we1;
output  [31:0] mat_0_d1;
input  [31:0] mat_0_q1;
output  [3:0] mat_1_address0;
output   mat_1_ce0;
output   mat_1_we0;
output  [31:0] mat_1_d0;
input  [31:0] mat_1_q0;
output  [3:0] mat_1_address1;
output   mat_1_ce1;
output   mat_1_we1;
output  [31:0] mat_1_d1;
input  [31:0] mat_1_q1;
output  [3:0] mat_2_address0;
output   mat_2_ce0;
output   mat_2_we0;
output  [31:0] mat_2_d0;
input  [31:0] mat_2_q0;
output  [3:0] mat_2_address1;
output   mat_2_ce1;
output   mat_2_we1;
output  [31:0] mat_2_d1;
input  [31:0] mat_2_q1;
output  [3:0] mat_3_address0;
output   mat_3_ce0;
output   mat_3_we0;
output  [31:0] mat_3_d0;
input  [31:0] mat_3_q0;
output  [3:0] mat_3_address1;
output   mat_3_ce1;
output   mat_3_we1;
output  [31:0] mat_3_d1;
input  [31:0] mat_3_q1;
output  [3:0] mat_4_address0;
output   mat_4_ce0;
output   mat_4_we0;
output  [31:0] mat_4_d0;
input  [31:0] mat_4_q0;
output  [3:0] mat_4_address1;
output   mat_4_ce1;
output   mat_4_we1;
output  [31:0] mat_4_d1;
input  [31:0] mat_4_q1;
output  [3:0] mat_5_address0;
output   mat_5_ce0;
output   mat_5_we0;
output  [31:0] mat_5_d0;
input  [31:0] mat_5_q0;
output  [3:0] mat_5_address1;
output   mat_5_ce1;
output   mat_5_we1;
output  [31:0] mat_5_d1;
input  [31:0] mat_5_q1;
output  [3:0] mat_6_address0;
output   mat_6_ce0;
output   mat_6_we0;
output  [31:0] mat_6_d0;
input  [31:0] mat_6_q0;
output  [3:0] mat_6_address1;
output   mat_6_ce1;
output   mat_6_we1;
output  [31:0] mat_6_d1;
input  [31:0] mat_6_q1;
output  [3:0] mat_7_address0;
output   mat_7_ce0;
output   mat_7_we0;
output  [31:0] mat_7_d0;
input  [31:0] mat_7_q0;
output  [3:0] mat_7_address1;
output   mat_7_ce1;
output   mat_7_we1;
output  [31:0] mat_7_d1;
input  [31:0] mat_7_q1;
output  [3:0] mat_8_address0;
output   mat_8_ce0;
output   mat_8_we0;
output  [31:0] mat_8_d0;
input  [31:0] mat_8_q0;
output  [3:0] mat_8_address1;
output   mat_8_ce1;
output   mat_8_we1;
output  [31:0] mat_8_d1;
input  [31:0] mat_8_q1;
input  [31:0] r;
input  [31:0] c;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] mat_0_address0;
reg mat_0_ce0;
reg mat_0_we0;
reg[3:0] mat_0_address1;
reg mat_0_ce1;
reg mat_0_we1;
reg[3:0] mat_1_address0;
reg mat_1_ce0;
reg mat_1_we0;
reg[3:0] mat_1_address1;
reg mat_1_ce1;
reg mat_1_we1;
reg[3:0] mat_2_address0;
reg mat_2_ce0;
reg mat_2_we0;
reg[3:0] mat_2_address1;
reg mat_2_ce1;
reg mat_2_we1;
reg[3:0] mat_3_address0;
reg mat_3_ce0;
reg mat_3_we0;
reg[3:0] mat_3_address1;
reg mat_3_ce1;
reg mat_3_we1;
reg[3:0] mat_4_address0;
reg mat_4_ce0;
reg mat_4_we0;
reg[3:0] mat_4_address1;
reg mat_4_ce1;
reg mat_4_we1;
reg[3:0] mat_5_address0;
reg mat_5_ce0;
reg mat_5_we0;
reg[3:0] mat_5_address1;
reg mat_5_ce1;
reg mat_5_we1;
reg[3:0] mat_6_address0;
reg mat_6_ce0;
reg mat_6_we0;
reg[3:0] mat_6_address1;
reg mat_6_ce1;
reg mat_6_we1;
reg[3:0] mat_7_address0;
reg mat_7_ce0;
reg mat_7_we0;
reg[3:0] mat_7_address1;
reg mat_7_ce1;
reg mat_7_we1;
reg[3:0] mat_8_address0;
reg mat_8_ce0;
reg mat_8_we0;
reg[3:0] mat_8_address1;
reg mat_8_ce1;
reg mat_8_we1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_892;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state6;
reg   [31:0] reg_896;
wire    ap_CS_fsm_state5;
reg   [31:0] reg_900;
reg   [31:0] reg_904;
reg   [31:0] reg_908;
reg   [31:0] reg_913;
reg   [31:0] reg_917;
reg   [31:0] reg_922;
reg   [31:0] reg_926;
reg   [31:0] reg_931;
reg   [31:0] reg_936;
reg   [31:0] reg_941;
reg   [31:0] reg_946;
reg   [31:0] reg_950;
reg   [31:0] reg_954;
wire    ap_CS_fsm_state3;
reg   [31:0] reg_959;
reg   [31:0] mat_0_load_reg_1470;
reg   [31:0] mat_1_load_reg_1475;
reg   [31:0] mat_6_load_reg_1485;
reg   [31:0] mat_1_load_1_reg_1500;
reg   [31:0] mat_4_load_reg_1580;
reg   [31:0] mat_8_load_reg_1585;
reg   [31:0] mat_0_load_1_reg_1590;
reg   [31:0] mat_3_load_1_reg_1595;
reg   [31:0] mat_4_load_1_reg_1600;
reg   [31:0] mat_8_load_1_reg_1605;
reg   [31:0] mat_0_load_2_reg_1610;
reg   [31:0] mat_1_load_2_reg_1615;
reg   [31:0] mat_2_load_2_reg_1620;
reg   [31:0] mat_5_load_2_reg_1625;
reg   [31:0] mat_6_load_2_reg_1630;
reg   [31:0] mat_7_load_2_reg_1635;
reg   [31:0] mat_1_load_3_reg_1650;
reg   [31:0] mat_3_load_3_reg_1660;
reg   [31:0] mat_6_load_3_reg_1675;
reg   [31:0] mat_7_load_3_reg_1680;
reg   [31:0] mat_8_load_2_reg_1750;
wire    ap_CS_fsm_state4;
reg   [31:0] mat_0_load_3_reg_1755;
reg   [31:0] mat_2_load_3_reg_1760;
reg   [31:0] mat_4_load_3_reg_1765;
reg   [31:0] mat_5_load_3_reg_1770;
reg   [31:0] mat_8_load_3_reg_1775;
reg   [31:0] mat_0_load_4_reg_1780;
reg   [31:0] mat_1_load_4_reg_1785;
reg   [31:0] mat_2_load_4_reg_1790;
reg   [31:0] mat_3_load_4_reg_1795;
reg   [31:0] mat_4_load_4_reg_1800;
reg   [31:0] mat_5_load_4_reg_1805;
reg   [31:0] mat_6_load_4_reg_1810;
reg   [31:0] mat_7_load_4_reg_1815;
reg   [31:0] mat_1_load_5_reg_1830;
reg   [31:0] mat_3_load_5_reg_1835;
reg   [31:0] mat_6_load_5_reg_1840;
reg   [31:0] mat_7_load_5_reg_1845;
reg   [31:0] mat_1_load_6_reg_1930;
reg   [31:0] mat_0_load_7_reg_1940;
reg   [31:0] mat_1_load_7_reg_1945;
reg   [31:0] mat_6_load_7_reg_1950;
wire   [31:0] add_ln29_18_fu_964_p2;
reg   [31:0] add_ln29_18_reg_1955;
wire   [31:0] add_ln29_22_fu_974_p2;
reg   [31:0] add_ln29_22_reg_1960;
wire   [31:0] add_ln29_25_fu_979_p2;
reg   [31:0] add_ln29_25_reg_1965;
wire   [31:0] add_ln29_26_fu_985_p2;
reg   [31:0] add_ln29_26_reg_1970;
wire   [31:0] add_ln29_31_fu_1007_p2;
reg   [31:0] add_ln29_31_reg_1975;
wire   [31:0] add_ln33_36_fu_1013_p2;
reg   [31:0] add_ln33_36_reg_2020;
wire   [31:0] add_ln33_39_fu_1025_p2;
reg   [31:0] add_ln33_39_reg_2025;
wire   [31:0] add_ln29_fu_1031_p2;
reg   [31:0] add_ln29_reg_2030;
wire   [31:0] add_ln29_1_fu_1037_p2;
reg   [31:0] add_ln29_1_reg_2035;
wire   [31:0] add_ln29_6_fu_1056_p2;
reg   [31:0] add_ln29_6_reg_2040;
wire   [31:0] add_ln29_8_fu_1062_p2;
reg   [31:0] add_ln29_8_reg_2045;
wire   [31:0] add_ln29_9_fu_1066_p2;
reg   [31:0] add_ln29_9_reg_2050;
wire   [31:0] add_ln29_14_fu_1083_p2;
reg   [31:0] add_ln29_14_reg_2055;
wire   [31:0] add_ln29_33_fu_1124_p2;
reg   [31:0] add_ln29_33_reg_2060;
wire   [31:0] add_ln33_fu_1130_p2;
reg   [31:0] add_ln33_reg_2065;
wire   [31:0] add_ln33_4_fu_1136_p2;
reg   [31:0] add_ln33_4_reg_2070;
wire   [31:0] add_ln33_7_fu_1147_p2;
reg   [31:0] add_ln33_7_reg_2075;
wire   [31:0] add_ln33_10_fu_1153_p2;
reg   [31:0] add_ln33_10_reg_2080;
wire   [31:0] add_ln33_14_fu_1158_p2;
reg   [31:0] add_ln33_14_reg_2085;
wire   [31:0] add_ln33_17_fu_1168_p2;
reg   [31:0] add_ln33_17_reg_2090;
wire   [31:0] add_ln33_23_fu_1178_p2;
reg   [31:0] add_ln33_23_reg_2095;
wire   [31:0] add_ln33_25_fu_1183_p2;
reg   [31:0] add_ln33_25_reg_2100;
wire   [31:0] add_ln33_28_fu_1191_p2;
reg   [31:0] add_ln33_28_reg_2105;
wire   [31:0] add_ln33_41_fu_1230_p2;
reg   [31:0] add_ln33_41_reg_2110;
wire   [31:0] add_ln29_34_fu_1260_p2;
reg   [31:0] add_ln29_34_reg_2115;
wire    ap_CS_fsm_state7;
wire   [31:0] add_ln33_9_fu_1292_p2;
reg   [31:0] add_ln33_9_reg_2122;
wire   [31:0] add_ln33_19_fu_1325_p2;
reg   [31:0] add_ln33_19_reg_2127;
wire   [31:0] add_ln33_42_fu_1355_p2;
reg   [31:0] add_ln33_42_reg_2132;
wire   [31:0] add_ln33_43_fu_1364_p2;
reg   [31:0] add_ln33_43_reg_2137;
wire    ap_CS_fsm_state8;
wire   [31:0] select_ln40_fu_1374_p3;
reg   [31:0] select_ln40_reg_2144;
wire    ap_CS_fsm_state9;
wire    grp_makeZero_fu_868_ap_start;
wire    grp_makeZero_fu_868_ap_done;
wire    grp_makeZero_fu_868_ap_idle;
wire    grp_makeZero_fu_868_ap_ready;
wire   [3:0] grp_makeZero_fu_868_mat_0_address0;
wire    grp_makeZero_fu_868_mat_0_ce0;
wire    grp_makeZero_fu_868_mat_0_we0;
wire   [31:0] grp_makeZero_fu_868_mat_0_d0;
wire   [3:0] grp_makeZero_fu_868_mat_0_address1;
wire    grp_makeZero_fu_868_mat_0_ce1;
wire    grp_makeZero_fu_868_mat_0_we1;
wire   [31:0] grp_makeZero_fu_868_mat_0_d1;
wire   [3:0] grp_makeZero_fu_868_mat_1_address0;
wire    grp_makeZero_fu_868_mat_1_ce0;
wire    grp_makeZero_fu_868_mat_1_we0;
wire   [31:0] grp_makeZero_fu_868_mat_1_d0;
wire   [3:0] grp_makeZero_fu_868_mat_1_address1;
wire    grp_makeZero_fu_868_mat_1_ce1;
wire    grp_makeZero_fu_868_mat_1_we1;
wire   [31:0] grp_makeZero_fu_868_mat_1_d1;
wire   [3:0] grp_makeZero_fu_868_mat_2_address0;
wire    grp_makeZero_fu_868_mat_2_ce0;
wire    grp_makeZero_fu_868_mat_2_we0;
wire   [31:0] grp_makeZero_fu_868_mat_2_d0;
wire   [3:0] grp_makeZero_fu_868_mat_2_address1;
wire    grp_makeZero_fu_868_mat_2_ce1;
wire    grp_makeZero_fu_868_mat_2_we1;
wire   [31:0] grp_makeZero_fu_868_mat_2_d1;
wire   [3:0] grp_makeZero_fu_868_mat_3_address0;
wire    grp_makeZero_fu_868_mat_3_ce0;
wire    grp_makeZero_fu_868_mat_3_we0;
wire   [31:0] grp_makeZero_fu_868_mat_3_d0;
wire   [3:0] grp_makeZero_fu_868_mat_3_address1;
wire    grp_makeZero_fu_868_mat_3_ce1;
wire    grp_makeZero_fu_868_mat_3_we1;
wire   [31:0] grp_makeZero_fu_868_mat_3_d1;
wire   [3:0] grp_makeZero_fu_868_mat_4_address0;
wire    grp_makeZero_fu_868_mat_4_ce0;
wire    grp_makeZero_fu_868_mat_4_we0;
wire   [31:0] grp_makeZero_fu_868_mat_4_d0;
wire   [3:0] grp_makeZero_fu_868_mat_4_address1;
wire    grp_makeZero_fu_868_mat_4_ce1;
wire    grp_makeZero_fu_868_mat_4_we1;
wire   [31:0] grp_makeZero_fu_868_mat_4_d1;
wire   [3:0] grp_makeZero_fu_868_mat_5_address0;
wire    grp_makeZero_fu_868_mat_5_ce0;
wire    grp_makeZero_fu_868_mat_5_we0;
wire   [31:0] grp_makeZero_fu_868_mat_5_d0;
wire   [3:0] grp_makeZero_fu_868_mat_5_address1;
wire    grp_makeZero_fu_868_mat_5_ce1;
wire    grp_makeZero_fu_868_mat_5_we1;
wire   [31:0] grp_makeZero_fu_868_mat_5_d1;
wire   [3:0] grp_makeZero_fu_868_mat_6_address0;
wire    grp_makeZero_fu_868_mat_6_ce0;
wire    grp_makeZero_fu_868_mat_6_we0;
wire   [31:0] grp_makeZero_fu_868_mat_6_d0;
wire   [3:0] grp_makeZero_fu_868_mat_6_address1;
wire    grp_makeZero_fu_868_mat_6_ce1;
wire    grp_makeZero_fu_868_mat_6_we1;
wire   [31:0] grp_makeZero_fu_868_mat_6_d1;
wire   [3:0] grp_makeZero_fu_868_mat_7_address0;
wire    grp_makeZero_fu_868_mat_7_ce0;
wire    grp_makeZero_fu_868_mat_7_we0;
wire   [31:0] grp_makeZero_fu_868_mat_7_d0;
wire   [3:0] grp_makeZero_fu_868_mat_7_address1;
wire    grp_makeZero_fu_868_mat_7_ce1;
wire    grp_makeZero_fu_868_mat_7_we1;
wire   [31:0] grp_makeZero_fu_868_mat_7_d1;
wire   [3:0] grp_makeZero_fu_868_mat_8_address0;
wire    grp_makeZero_fu_868_mat_8_ce0;
wire    grp_makeZero_fu_868_mat_8_we0;
wire   [31:0] grp_makeZero_fu_868_mat_8_d0;
wire   [3:0] grp_makeZero_fu_868_mat_8_address1;
wire    grp_makeZero_fu_868_mat_8_ce1;
wire    grp_makeZero_fu_868_mat_8_we1;
wire   [31:0] grp_makeZero_fu_868_mat_8_d1;
wire   [31:0] grp_makeZero_fu_868_lower_sum;
reg    grp_makeZero_fu_868_ap_start_reg;
reg   [11:0] ap_NS_fsm;
wire    ap_NS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [31:0] add_ln29_21_fu_969_p2;
wire   [31:0] add_ln29_29_fu_995_p2;
wire   [31:0] add_ln29_30_fu_1001_p2;
wire   [31:0] add_ln29_28_fu_990_p2;
wire   [31:0] add_ln33_38_fu_1019_p2;
wire   [31:0] add_ln29_4_fu_1046_p2;
wire   [31:0] add_ln29_5_fu_1051_p2;
wire   [31:0] add_ln29_3_fu_1042_p2;
wire   [31:0] add_ln29_12_fu_1074_p2;
wire   [31:0] add_ln29_13_fu_1078_p2;
wire   [31:0] add_ln29_11_fu_1070_p2;
wire   [31:0] add_ln29_17_fu_1089_p2;
wire   [31:0] add_ln29_20_fu_1099_p2;
wire   [31:0] add_ln29_23_fu_1104_p2;
wire   [31:0] add_ln29_19_fu_1094_p2;
wire   [31:0] add_ln29_27_fu_1115_p2;
wire   [31:0] add_ln29_32_fu_1119_p2;
wire   [31:0] add_ln29_24_fu_1109_p2;
wire   [31:0] add_ln33_6_fu_1141_p2;
wire   [31:0] add_ln33_16_fu_1162_p2;
wire   [31:0] add_ln33_22_fu_1174_p2;
wire   [31:0] add_ln33_27_fu_1187_p2;
wire   [31:0] add_ln33_31_fu_1196_p2;
wire   [31:0] add_ln33_33_fu_1205_p2;
wire   [31:0] add_ln33_34_fu_1209_p2;
wire   [31:0] add_ln33_32_fu_1200_p2;
wire   [31:0] add_ln33_37_fu_1221_p2;
wire   [31:0] add_ln33_40_fu_1225_p2;
wire   [31:0] add_ln33_35_fu_1215_p2;
wire   [31:0] add_ln29_2_fu_1236_p2;
wire   [31:0] add_ln29_10_fu_1245_p2;
wire   [31:0] add_ln29_15_fu_1249_p2;
wire   [31:0] add_ln29_7_fu_1240_p2;
wire   [31:0] add_ln29_16_fu_1254_p2;
wire   [31:0] add_ln33_1_fu_1265_p2;
wire   [31:0] add_ln33_2_fu_1271_p2;
wire   [31:0] add_ln33_5_fu_1282_p2;
wire   [31:0] add_ln33_8_fu_1287_p2;
wire   [31:0] add_ln33_3_fu_1277_p2;
wire   [31:0] add_ln33_11_fu_1298_p2;
wire   [31:0] add_ln33_12_fu_1304_p2;
wire   [31:0] add_ln33_15_fu_1315_p2;
wire   [31:0] add_ln33_18_fu_1320_p2;
wire   [31:0] add_ln33_13_fu_1310_p2;
wire   [31:0] add_ln33_21_fu_1331_p2;
wire   [31:0] add_ln33_26_fu_1340_p2;
wire   [31:0] add_ln33_29_fu_1344_p2;
wire   [31:0] add_ln33_24_fu_1335_p2;
wire   [31:0] add_ln33_30_fu_1349_p2;
wire   [31:0] add_ln33_20_fu_1360_p2;
wire   [0:0] icmp_ln40_fu_1370_p2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 grp_makeZero_fu_868_ap_start_reg = 1'b0;
end

makeZero grp_makeZero_fu_868(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_makeZero_fu_868_ap_start),
    .ap_done(grp_makeZero_fu_868_ap_done),
    .ap_idle(grp_makeZero_fu_868_ap_idle),
    .ap_ready(grp_makeZero_fu_868_ap_ready),
    .mat_0_address0(grp_makeZero_fu_868_mat_0_address0),
    .mat_0_ce0(grp_makeZero_fu_868_mat_0_ce0),
    .mat_0_we0(grp_makeZero_fu_868_mat_0_we0),
    .mat_0_d0(grp_makeZero_fu_868_mat_0_d0),
    .mat_0_address1(grp_makeZero_fu_868_mat_0_address1),
    .mat_0_ce1(grp_makeZero_fu_868_mat_0_ce1),
    .mat_0_we1(grp_makeZero_fu_868_mat_0_we1),
    .mat_0_d1(grp_makeZero_fu_868_mat_0_d1),
    .mat_1_address0(grp_makeZero_fu_868_mat_1_address0),
    .mat_1_ce0(grp_makeZero_fu_868_mat_1_ce0),
    .mat_1_we0(grp_makeZero_fu_868_mat_1_we0),
    .mat_1_d0(grp_makeZero_fu_868_mat_1_d0),
    .mat_1_address1(grp_makeZero_fu_868_mat_1_address1),
    .mat_1_ce1(grp_makeZero_fu_868_mat_1_ce1),
    .mat_1_we1(grp_makeZero_fu_868_mat_1_we1),
    .mat_1_d1(grp_makeZero_fu_868_mat_1_d1),
    .mat_2_address0(grp_makeZero_fu_868_mat_2_address0),
    .mat_2_ce0(grp_makeZero_fu_868_mat_2_ce0),
    .mat_2_we0(grp_makeZero_fu_868_mat_2_we0),
    .mat_2_d0(grp_makeZero_fu_868_mat_2_d0),
    .mat_2_address1(grp_makeZero_fu_868_mat_2_address1),
    .mat_2_ce1(grp_makeZero_fu_868_mat_2_ce1),
    .mat_2_we1(grp_makeZero_fu_868_mat_2_we1),
    .mat_2_d1(grp_makeZero_fu_868_mat_2_d1),
    .mat_3_address0(grp_makeZero_fu_868_mat_3_address0),
    .mat_3_ce0(grp_makeZero_fu_868_mat_3_ce0),
    .mat_3_we0(grp_makeZero_fu_868_mat_3_we0),
    .mat_3_d0(grp_makeZero_fu_868_mat_3_d0),
    .mat_3_address1(grp_makeZero_fu_868_mat_3_address1),
    .mat_3_ce1(grp_makeZero_fu_868_mat_3_ce1),
    .mat_3_we1(grp_makeZero_fu_868_mat_3_we1),
    .mat_3_d1(grp_makeZero_fu_868_mat_3_d1),
    .mat_4_address0(grp_makeZero_fu_868_mat_4_address0),
    .mat_4_ce0(grp_makeZero_fu_868_mat_4_ce0),
    .mat_4_we0(grp_makeZero_fu_868_mat_4_we0),
    .mat_4_d0(grp_makeZero_fu_868_mat_4_d0),
    .mat_4_address1(grp_makeZero_fu_868_mat_4_address1),
    .mat_4_ce1(grp_makeZero_fu_868_mat_4_ce1),
    .mat_4_we1(grp_makeZero_fu_868_mat_4_we1),
    .mat_4_d1(grp_makeZero_fu_868_mat_4_d1),
    .mat_5_address0(grp_makeZero_fu_868_mat_5_address0),
    .mat_5_ce0(grp_makeZero_fu_868_mat_5_ce0),
    .mat_5_we0(grp_makeZero_fu_868_mat_5_we0),
    .mat_5_d0(grp_makeZero_fu_868_mat_5_d0),
    .mat_5_address1(grp_makeZero_fu_868_mat_5_address1),
    .mat_5_ce1(grp_makeZero_fu_868_mat_5_ce1),
    .mat_5_we1(grp_makeZero_fu_868_mat_5_we1),
    .mat_5_d1(grp_makeZero_fu_868_mat_5_d1),
    .mat_6_address0(grp_makeZero_fu_868_mat_6_address0),
    .mat_6_ce0(grp_makeZero_fu_868_mat_6_ce0),
    .mat_6_we0(grp_makeZero_fu_868_mat_6_we0),
    .mat_6_d0(grp_makeZero_fu_868_mat_6_d0),
    .mat_6_address1(grp_makeZero_fu_868_mat_6_address1),
    .mat_6_ce1(grp_makeZero_fu_868_mat_6_ce1),
    .mat_6_we1(grp_makeZero_fu_868_mat_6_we1),
    .mat_6_d1(grp_makeZero_fu_868_mat_6_d1),
    .mat_7_address0(grp_makeZero_fu_868_mat_7_address0),
    .mat_7_ce0(grp_makeZero_fu_868_mat_7_ce0),
    .mat_7_we0(grp_makeZero_fu_868_mat_7_we0),
    .mat_7_d0(grp_makeZero_fu_868_mat_7_d0),
    .mat_7_address1(grp_makeZero_fu_868_mat_7_address1),
    .mat_7_ce1(grp_makeZero_fu_868_mat_7_ce1),
    .mat_7_we1(grp_makeZero_fu_868_mat_7_we1),
    .mat_7_d1(grp_makeZero_fu_868_mat_7_d1),
    .mat_8_address0(grp_makeZero_fu_868_mat_8_address0),
    .mat_8_ce0(grp_makeZero_fu_868_mat_8_ce0),
    .mat_8_we0(grp_makeZero_fu_868_mat_8_we0),
    .mat_8_d0(grp_makeZero_fu_868_mat_8_d0),
    .mat_8_address1(grp_makeZero_fu_868_mat_8_address1),
    .mat_8_ce1(grp_makeZero_fu_868_mat_8_ce1),
    .mat_8_we1(grp_makeZero_fu_868_mat_8_we1),
    .mat_8_d1(grp_makeZero_fu_868_mat_8_d1),
    .lower_sum(grp_makeZero_fu_868_lower_sum),
    .upper_sum(add_ln29_34_reg_2115)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_makeZero_fu_868_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state8) & (1'b1 == ap_CS_fsm_state7))) begin
            grp_makeZero_fu_868_ap_start_reg <= 1'b1;
        end else if ((grp_makeZero_fu_868_ap_ready == 1'b1)) begin
            grp_makeZero_fu_868_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_908 <= mat_6_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_908 <= mat_6_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_917 <= mat_3_q0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_917 <= mat_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_926 <= mat_2_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_926 <= mat_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_931 <= mat_4_q0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_931 <= mat_4_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_936 <= mat_5_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_936 <= mat_5_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_941 <= mat_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_941 <= mat_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_954 <= mat_2_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_954 <= mat_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_959 <= mat_5_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_959 <= mat_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln29_14_reg_2055 <= add_ln29_14_fu_1083_p2;
        add_ln29_1_reg_2035 <= add_ln29_1_fu_1037_p2;
        add_ln29_33_reg_2060 <= add_ln29_33_fu_1124_p2;
        add_ln29_6_reg_2040 <= add_ln29_6_fu_1056_p2;
        add_ln29_8_reg_2045 <= add_ln29_8_fu_1062_p2;
        add_ln29_9_reg_2050 <= add_ln29_9_fu_1066_p2;
        add_ln29_reg_2030 <= add_ln29_fu_1031_p2;
        add_ln33_10_reg_2080 <= add_ln33_10_fu_1153_p2;
        add_ln33_14_reg_2085 <= add_ln33_14_fu_1158_p2;
        add_ln33_17_reg_2090 <= add_ln33_17_fu_1168_p2;
        add_ln33_23_reg_2095 <= add_ln33_23_fu_1178_p2;
        add_ln33_25_reg_2100 <= add_ln33_25_fu_1183_p2;
        add_ln33_28_reg_2105 <= add_ln33_28_fu_1191_p2;
        add_ln33_41_reg_2110 <= add_ln33_41_fu_1230_p2;
        add_ln33_4_reg_2070 <= add_ln33_4_fu_1136_p2;
        add_ln33_7_reg_2075 <= add_ln33_7_fu_1147_p2;
        add_ln33_reg_2065 <= add_ln33_fu_1130_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln29_18_reg_1955 <= add_ln29_18_fu_964_p2;
        add_ln29_22_reg_1960 <= add_ln29_22_fu_974_p2;
        add_ln29_25_reg_1965 <= add_ln29_25_fu_979_p2;
        add_ln29_26_reg_1970 <= add_ln29_26_fu_985_p2;
        add_ln29_31_reg_1975 <= add_ln29_31_fu_1007_p2;
        add_ln33_36_reg_2020 <= add_ln33_36_fu_1013_p2;
        add_ln33_39_reg_2025 <= add_ln33_39_fu_1025_p2;
        mat_0_load_7_reg_1940 <= mat_0_q1;
        mat_1_load_6_reg_1930 <= mat_1_q0;
        mat_1_load_7_reg_1945 <= mat_1_q1;
        mat_6_load_7_reg_1950 <= mat_6_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln29_34_reg_2115 <= add_ln29_34_fu_1260_p2;
        add_ln33_19_reg_2127 <= add_ln33_19_fu_1325_p2;
        add_ln33_42_reg_2132 <= add_ln33_42_fu_1355_p2;
        add_ln33_9_reg_2122 <= add_ln33_9_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln33_43_reg_2137 <= add_ln33_43_fu_1364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_0_load_1_reg_1590 <= mat_0_q0;
        mat_0_load_2_reg_1610 <= mat_0_q1;
        mat_1_load_2_reg_1615 <= mat_1_q0;
        mat_1_load_3_reg_1650 <= mat_1_q1;
        mat_2_load_2_reg_1620 <= mat_2_q1;
        mat_3_load_1_reg_1595 <= mat_3_q0;
        mat_3_load_3_reg_1660 <= mat_3_q1;
        mat_4_load_1_reg_1600 <= mat_4_q1;
        mat_4_load_reg_1580 <= mat_4_q0;
        mat_5_load_2_reg_1625 <= mat_5_q1;
        mat_6_load_2_reg_1630 <= mat_6_q0;
        mat_6_load_3_reg_1675 <= mat_6_q1;
        mat_7_load_2_reg_1635 <= mat_7_q0;
        mat_7_load_3_reg_1680 <= mat_7_q1;
        mat_8_load_1_reg_1605 <= mat_8_q1;
        mat_8_load_reg_1585 <= mat_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_0_load_3_reg_1755 <= mat_0_q0;
        mat_0_load_4_reg_1780 <= mat_0_q1;
        mat_1_load_4_reg_1785 <= mat_1_q0;
        mat_1_load_5_reg_1830 <= mat_1_q1;
        mat_2_load_3_reg_1760 <= mat_2_q0;
        mat_2_load_4_reg_1790 <= mat_2_q1;
        mat_3_load_4_reg_1795 <= mat_3_q0;
        mat_3_load_5_reg_1835 <= mat_3_q1;
        mat_4_load_3_reg_1765 <= mat_4_q0;
        mat_4_load_4_reg_1800 <= mat_4_q1;
        mat_5_load_3_reg_1770 <= mat_5_q0;
        mat_5_load_4_reg_1805 <= mat_5_q1;
        mat_6_load_4_reg_1810 <= mat_6_q0;
        mat_6_load_5_reg_1840 <= mat_6_q1;
        mat_7_load_4_reg_1815 <= mat_7_q0;
        mat_7_load_5_reg_1845 <= mat_7_q1;
        mat_8_load_2_reg_1750 <= mat_8_q0;
        mat_8_load_3_reg_1775 <= mat_8_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_0_load_reg_1470 <= mat_0_q0;
        mat_1_load_1_reg_1500 <= mat_1_q1;
        mat_1_load_reg_1475 <= mat_1_q0;
        mat_6_load_reg_1485 <= mat_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_892 <= mat_2_q0;
        reg_900 <= mat_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_896 <= mat_3_q0;
        reg_904 <= mat_7_q0;
        reg_913 <= mat_7_q1;
        reg_922 <= mat_4_q0;
        reg_946 <= mat_8_q0;
        reg_950 <= mat_8_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        select_ln40_reg_2144 <= select_ln40_fu_1374_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_0_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_0_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_0_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_0_address0 = grp_makeZero_fu_868_mat_0_address0;
    end else begin
        mat_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_0_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_0_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_0_address1 = grp_makeZero_fu_868_mat_0_address1;
    end else begin
        mat_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_0_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_0_ce0 = grp_makeZero_fu_868_mat_0_ce0;
    end else begin
        mat_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_0_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_0_ce1 = grp_makeZero_fu_868_mat_0_ce1;
    end else begin
        mat_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_0_we0 = grp_makeZero_fu_868_mat_0_we0;
    end else begin
        mat_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_0_we1 = grp_makeZero_fu_868_mat_0_we1;
    end else begin
        mat_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_1_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_1_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_1_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_1_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_1_address0 = grp_makeZero_fu_868_mat_1_address0;
    end else begin
        mat_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_1_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_1_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_1_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_1_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_1_address1 = grp_makeZero_fu_868_mat_1_address1;
    end else begin
        mat_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_1_ce0 = grp_makeZero_fu_868_mat_1_ce0;
    end else begin
        mat_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_1_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_1_ce1 = grp_makeZero_fu_868_mat_1_ce1;
    end else begin
        mat_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_1_we0 = grp_makeZero_fu_868_mat_1_we0;
    end else begin
        mat_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_1_we1 = grp_makeZero_fu_868_mat_1_we1;
    end else begin
        mat_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_2_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_2_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_2_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_2_address0 = grp_makeZero_fu_868_mat_2_address0;
    end else begin
        mat_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_2_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_2_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_2_address1 = grp_makeZero_fu_868_mat_2_address1;
    end else begin
        mat_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_2_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_2_ce0 = grp_makeZero_fu_868_mat_2_ce0;
    end else begin
        mat_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_2_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_2_ce1 = grp_makeZero_fu_868_mat_2_ce1;
    end else begin
        mat_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_2_we0 = grp_makeZero_fu_868_mat_2_we0;
    end else begin
        mat_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_2_we1 = grp_makeZero_fu_868_mat_2_we1;
    end else begin
        mat_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_3_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_3_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_3_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_3_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_3_address0 = grp_makeZero_fu_868_mat_3_address0;
    end else begin
        mat_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_3_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_3_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_3_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_3_address1 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_3_address1 = grp_makeZero_fu_868_mat_3_address1;
    end else begin
        mat_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_3_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_3_ce0 = grp_makeZero_fu_868_mat_3_ce0;
    end else begin
        mat_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_3_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_3_ce1 = grp_makeZero_fu_868_mat_3_ce1;
    end else begin
        mat_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_3_we0 = grp_makeZero_fu_868_mat_3_we0;
    end else begin
        mat_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_3_we1 = grp_makeZero_fu_868_mat_3_we1;
    end else begin
        mat_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_4_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_4_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_4_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_4_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_4_address0 = 64'd2;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_4_address0 = grp_makeZero_fu_868_mat_4_address0;
    end else begin
        mat_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_4_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_4_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_4_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_4_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_4_address1 = grp_makeZero_fu_868_mat_4_address1;
    end else begin
        mat_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_4_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_4_ce0 = grp_makeZero_fu_868_mat_4_ce0;
    end else begin
        mat_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_4_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_4_ce1 = grp_makeZero_fu_868_mat_4_ce1;
    end else begin
        mat_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_4_we0 = grp_makeZero_fu_868_mat_4_we0;
    end else begin
        mat_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_4_we1 = grp_makeZero_fu_868_mat_4_we1;
    end else begin
        mat_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_5_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_5_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_5_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_5_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_5_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_5_address0 = grp_makeZero_fu_868_mat_5_address0;
    end else begin
        mat_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_5_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_5_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_5_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_5_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_5_address1 = grp_makeZero_fu_868_mat_5_address1;
    end else begin
        mat_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_5_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_5_ce0 = grp_makeZero_fu_868_mat_5_ce0;
    end else begin
        mat_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_5_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_5_ce1 = grp_makeZero_fu_868_mat_5_ce1;
    end else begin
        mat_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_5_we0 = grp_makeZero_fu_868_mat_5_we0;
    end else begin
        mat_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_5_we1 = grp_makeZero_fu_868_mat_5_we1;
    end else begin
        mat_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_6_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_6_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_6_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_6_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_6_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_6_address0 = grp_makeZero_fu_868_mat_6_address0;
    end else begin
        mat_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_6_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_6_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_6_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_6_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_6_address1 = grp_makeZero_fu_868_mat_6_address1;
    end else begin
        mat_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_6_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_6_ce0 = grp_makeZero_fu_868_mat_6_ce0;
    end else begin
        mat_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_6_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_6_ce1 = grp_makeZero_fu_868_mat_6_ce1;
    end else begin
        mat_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_6_we0 = grp_makeZero_fu_868_mat_6_we0;
    end else begin
        mat_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_6_we1 = grp_makeZero_fu_868_mat_6_we1;
    end else begin
        mat_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_7_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_7_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_7_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_7_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_7_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_7_address0 = grp_makeZero_fu_868_mat_7_address0;
    end else begin
        mat_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_7_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_7_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_7_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_7_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_7_address1 = grp_makeZero_fu_868_mat_7_address1;
    end else begin
        mat_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_7_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_7_ce0 = grp_makeZero_fu_868_mat_7_ce0;
    end else begin
        mat_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_7_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_7_ce1 = grp_makeZero_fu_868_mat_7_ce1;
    end else begin
        mat_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_7_we0 = grp_makeZero_fu_868_mat_7_we0;
    end else begin
        mat_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_7_we1 = grp_makeZero_fu_868_mat_7_we1;
    end else begin
        mat_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mat_8_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_8_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_8_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_8_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_8_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_8_address0 = grp_makeZero_fu_868_mat_8_address0;
    end else begin
        mat_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mat_8_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mat_8_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_8_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mat_8_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_8_address1 = grp_makeZero_fu_868_mat_8_address1;
    end else begin
        mat_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_8_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_8_ce0 = grp_makeZero_fu_868_mat_8_ce0;
    end else begin
        mat_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        mat_8_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_8_ce1 = grp_makeZero_fu_868_mat_8_ce1;
    end else begin
        mat_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_8_we0 = grp_makeZero_fu_868_mat_8_we0;
    end else begin
        mat_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        mat_8_we1 = grp_makeZero_fu_868_mat_8_we1;
    end else begin
        mat_8_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_10_fu_1245_p2 = (add_ln29_9_reg_2050 + add_ln29_8_reg_2045);

assign add_ln29_11_fu_1070_p2 = (mat_5_load_3_reg_1770 + mat_4_load_3_reg_1765);

assign add_ln29_12_fu_1074_p2 = (mat_8_load_3_reg_1775 + mat_7_load_3_reg_1680);

assign add_ln29_13_fu_1078_p2 = (add_ln29_12_fu_1074_p2 + mat_6_load_3_reg_1675);

assign add_ln29_14_fu_1083_p2 = (add_ln29_13_fu_1078_p2 + add_ln29_11_fu_1070_p2);

assign add_ln29_15_fu_1249_p2 = (add_ln29_14_reg_2055 + add_ln29_10_fu_1245_p2);

assign add_ln29_16_fu_1254_p2 = (add_ln29_15_fu_1249_p2 + add_ln29_7_fu_1240_p2);

assign add_ln29_17_fu_1089_p2 = (reg_892 + mat_1_load_reg_1475);

assign add_ln29_18_fu_964_p2 = (mat_4_load_reg_1580 + reg_896);

assign add_ln29_19_fu_1094_p2 = (add_ln29_18_reg_1955 + add_ln29_17_fu_1089_p2);

assign add_ln29_1_fu_1037_p2 = (reg_950 + mat_7_load_5_reg_1845);

assign add_ln29_20_fu_1099_p2 = (mat_6_load_reg_1485 + reg_900);

assign add_ln29_21_fu_969_p2 = (reg_904 + mat_3_load_1_reg_1595);

assign add_ln29_22_fu_974_p2 = (add_ln29_21_fu_969_p2 + mat_8_load_reg_1585);

assign add_ln29_23_fu_1104_p2 = (add_ln29_22_reg_1960 + add_ln29_20_fu_1099_p2);

assign add_ln29_24_fu_1109_p2 = (add_ln29_23_fu_1104_p2 + add_ln29_19_fu_1094_p2);

assign add_ln29_25_fu_979_p2 = (reg_954 + reg_959);

assign add_ln29_26_fu_985_p2 = (mat_4_load_1_reg_1600 + reg_913);

assign add_ln29_27_fu_1115_p2 = (add_ln29_26_reg_1970 + add_ln29_25_reg_1965);

assign add_ln29_28_fu_990_p2 = (reg_908 + mat_8_load_1_reg_1605);

assign add_ln29_29_fu_995_p2 = (reg_917 + reg_946);

assign add_ln29_2_fu_1236_p2 = (add_ln29_1_reg_2035 + add_ln29_reg_2030);

assign add_ln29_30_fu_1001_p2 = (add_ln29_29_fu_995_p2 + reg_922);

assign add_ln29_31_fu_1007_p2 = (add_ln29_30_fu_1001_p2 + add_ln29_28_fu_990_p2);

assign add_ln29_32_fu_1119_p2 = (add_ln29_31_reg_1975 + add_ln29_27_fu_1115_p2);

assign add_ln29_33_fu_1124_p2 = (add_ln29_32_fu_1119_p2 + add_ln29_24_fu_1109_p2);

assign add_ln29_34_fu_1260_p2 = (add_ln29_33_reg_2060 + add_ln29_16_fu_1254_p2);

assign add_ln29_3_fu_1042_p2 = (mat_6_load_5_reg_1840 + mat_6_load_4_reg_1810);

assign add_ln29_4_fu_1046_p2 = (reg_946 + mat_7_load_4_reg_1815);

assign add_ln29_5_fu_1051_p2 = (add_ln29_4_fu_1046_p2 + mat_5_load_4_reg_1805);

assign add_ln29_6_fu_1056_p2 = (add_ln29_5_fu_1051_p2 + add_ln29_3_fu_1042_p2);

assign add_ln29_7_fu_1240_p2 = (add_ln29_6_reg_2040 + add_ln29_2_fu_1236_p2);

assign add_ln29_8_fu_1062_p2 = (mat_6_load_2_reg_1630 + mat_5_load_2_reg_1625);

assign add_ln29_9_fu_1066_p2 = (mat_8_load_2_reg_1750 + mat_7_load_2_reg_1635);

assign add_ln29_fu_1031_p2 = (reg_904 + mat_8_q0);

assign add_ln33_10_fu_1153_p2 = (reg_926 + mat_1_load_6_reg_1930);

assign add_ln33_11_fu_1298_p2 = (reg_936 + reg_922);

assign add_ln33_12_fu_1304_p2 = (add_ln33_11_fu_1298_p2 + reg_896);

assign add_ln33_13_fu_1310_p2 = (add_ln33_12_fu_1304_p2 + add_ln33_10_reg_2080);

assign add_ln33_14_fu_1158_p2 = (mat_1_load_7_reg_1945 + mat_0_load_7_reg_1940);

assign add_ln33_15_fu_1315_p2 = (add_ln33_14_reg_2085 + reg_908);

assign add_ln33_16_fu_1162_p2 = (reg_931 + reg_917);

assign add_ln33_17_fu_1168_p2 = (add_ln33_16_fu_1162_p2 + reg_954);

assign add_ln33_18_fu_1320_p2 = (add_ln33_17_reg_2090 + add_ln33_15_fu_1315_p2);

assign add_ln33_19_fu_1325_p2 = (add_ln33_18_fu_1320_p2 + add_ln33_13_fu_1310_p2);

assign add_ln33_1_fu_1265_p2 = (reg_892 + reg_931);

assign add_ln33_20_fu_1360_p2 = (add_ln33_19_reg_2127 + add_ln33_9_reg_2122);

assign add_ln33_21_fu_1331_p2 = (mat_0_load_1_reg_1590 + mat_0_load_reg_1470);

assign add_ln33_22_fu_1174_p2 = (mat_1_load_2_reg_1615 + mat_0_load_2_reg_1610);

assign add_ln33_23_fu_1178_p2 = (add_ln33_22_fu_1174_p2 + mat_1_load_1_reg_1500);

assign add_ln33_24_fu_1335_p2 = (add_ln33_23_reg_2095 + add_ln33_21_fu_1331_p2);

assign add_ln33_25_fu_1183_p2 = (mat_1_load_3_reg_1650 + mat_0_load_3_reg_1755);

assign add_ln33_26_fu_1340_p2 = (add_ln33_25_reg_2100 + mat_2_load_2_reg_1620);

assign add_ln33_27_fu_1187_p2 = (mat_0_load_4_reg_1780 + mat_3_load_3_reg_1660);

assign add_ln33_28_fu_1191_p2 = (add_ln33_27_fu_1187_p2 + mat_2_load_3_reg_1760);

assign add_ln33_29_fu_1344_p2 = (add_ln33_28_reg_2105 + add_ln33_26_fu_1340_p2);

assign add_ln33_2_fu_1271_p2 = (add_ln33_1_fu_1265_p2 + reg_900);

assign add_ln33_30_fu_1349_p2 = (add_ln33_29_fu_1344_p2 + add_ln33_24_fu_1335_p2);

assign add_ln33_31_fu_1196_p2 = (mat_1_load_4_reg_1785 + mat_3_load_4_reg_1795);

assign add_ln33_32_fu_1200_p2 = (add_ln33_31_fu_1196_p2 + mat_2_load_4_reg_1790);

assign add_ln33_33_fu_1205_p2 = (mat_4_load_4_reg_1800 + mat_1_load_5_reg_1830);

assign add_ln33_34_fu_1209_p2 = (add_ln33_33_fu_1205_p2 + reg_941);

assign add_ln33_35_fu_1215_p2 = (add_ln33_34_fu_1209_p2 + add_ln33_32_fu_1200_p2);

assign add_ln33_36_fu_1013_p2 = (reg_926 + reg_931);

assign add_ln33_37_fu_1221_p2 = (add_ln33_36_reg_2020 + mat_3_load_5_reg_1835);

assign add_ln33_38_fu_1019_p2 = (reg_936 + reg_950);

assign add_ln33_39_fu_1025_p2 = (add_ln33_38_fu_1019_p2 + reg_941);

assign add_ln33_3_fu_1277_p2 = (add_ln33_2_fu_1271_p2 + add_ln33_reg_2065);

assign add_ln33_40_fu_1225_p2 = (add_ln33_39_reg_2025 + add_ln33_37_fu_1221_p2);

assign add_ln33_41_fu_1230_p2 = (add_ln33_40_fu_1225_p2 + add_ln33_35_fu_1215_p2);

assign add_ln33_42_fu_1355_p2 = (add_ln33_41_reg_2110 + add_ln33_30_fu_1349_p2);

assign add_ln33_43_fu_1364_p2 = (add_ln33_42_reg_2132 + add_ln33_20_fu_1360_p2);

assign add_ln33_4_fu_1136_p2 = (mat_6_load_7_reg_1950 + reg_959);

assign add_ln33_5_fu_1282_p2 = (add_ln33_4_reg_2070 + reg_917);

assign add_ln33_6_fu_1141_p2 = (mat_1_q0 + mat_0_q0);

assign add_ln33_7_fu_1147_p2 = (add_ln33_6_fu_1141_p2 + reg_913);

assign add_ln33_8_fu_1287_p2 = (add_ln33_7_reg_2075 + add_ln33_5_fu_1282_p2);

assign add_ln33_9_fu_1292_p2 = (add_ln33_8_fu_1287_p2 + add_ln33_3_fu_1277_p2);

assign add_ln33_fu_1130_p2 = (mat_6_q0 + mat_7_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state8 = ap_NS_fsm[32'd7];

assign ap_return = select_ln40_reg_2144;

assign grp_makeZero_fu_868_ap_start = grp_makeZero_fu_868_ap_start_reg;

assign grp_makeZero_fu_868_lower_sum = (add_ln33_42_reg_2132 + add_ln33_20_fu_1360_p2);

assign icmp_ln40_fu_1370_p2 = (($signed(add_ln33_43_reg_2137) > $signed(add_ln29_34_reg_2115)) ? 1'b1 : 1'b0);

assign mat_0_d0 = grp_makeZero_fu_868_mat_0_d0;

assign mat_0_d1 = grp_makeZero_fu_868_mat_0_d1;

assign mat_1_d0 = grp_makeZero_fu_868_mat_1_d0;

assign mat_1_d1 = grp_makeZero_fu_868_mat_1_d1;

assign mat_2_d0 = grp_makeZero_fu_868_mat_2_d0;

assign mat_2_d1 = grp_makeZero_fu_868_mat_2_d1;

assign mat_3_d0 = grp_makeZero_fu_868_mat_3_d0;

assign mat_3_d1 = grp_makeZero_fu_868_mat_3_d1;

assign mat_4_d0 = grp_makeZero_fu_868_mat_4_d0;

assign mat_4_d1 = grp_makeZero_fu_868_mat_4_d1;

assign mat_5_d0 = grp_makeZero_fu_868_mat_5_d0;

assign mat_5_d1 = grp_makeZero_fu_868_mat_5_d1;

assign mat_6_d0 = grp_makeZero_fu_868_mat_6_d0;

assign mat_6_d1 = grp_makeZero_fu_868_mat_6_d1;

assign mat_7_d0 = grp_makeZero_fu_868_mat_7_d0;

assign mat_7_d1 = grp_makeZero_fu_868_mat_7_d1;

assign mat_8_d0 = grp_makeZero_fu_868_mat_8_d0;

assign mat_8_d1 = grp_makeZero_fu_868_mat_8_d1;

assign select_ln40_fu_1374_p3 = ((icmp_ln40_fu_1370_p2[0:0] === 1'b1) ? add_ln33_43_reg_2137 : add_ln29_34_reg_2115);

endmodule //sum
