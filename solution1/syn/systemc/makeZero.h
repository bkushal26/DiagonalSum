// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _makeZero_HH_
#define _makeZero_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct makeZero : public sc_module {
    // Port declarations 80
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > mat_0_address0;
    sc_out< sc_logic > mat_0_ce0;
    sc_out< sc_logic > mat_0_we0;
    sc_out< sc_lv<32> > mat_0_d0;
    sc_out< sc_lv<4> > mat_0_address1;
    sc_out< sc_logic > mat_0_ce1;
    sc_out< sc_logic > mat_0_we1;
    sc_out< sc_lv<32> > mat_0_d1;
    sc_out< sc_lv<4> > mat_1_address0;
    sc_out< sc_logic > mat_1_ce0;
    sc_out< sc_logic > mat_1_we0;
    sc_out< sc_lv<32> > mat_1_d0;
    sc_out< sc_lv<4> > mat_1_address1;
    sc_out< sc_logic > mat_1_ce1;
    sc_out< sc_logic > mat_1_we1;
    sc_out< sc_lv<32> > mat_1_d1;
    sc_out< sc_lv<4> > mat_2_address0;
    sc_out< sc_logic > mat_2_ce0;
    sc_out< sc_logic > mat_2_we0;
    sc_out< sc_lv<32> > mat_2_d0;
    sc_out< sc_lv<4> > mat_2_address1;
    sc_out< sc_logic > mat_2_ce1;
    sc_out< sc_logic > mat_2_we1;
    sc_out< sc_lv<32> > mat_2_d1;
    sc_out< sc_lv<4> > mat_3_address0;
    sc_out< sc_logic > mat_3_ce0;
    sc_out< sc_logic > mat_3_we0;
    sc_out< sc_lv<32> > mat_3_d0;
    sc_out< sc_lv<4> > mat_3_address1;
    sc_out< sc_logic > mat_3_ce1;
    sc_out< sc_logic > mat_3_we1;
    sc_out< sc_lv<32> > mat_3_d1;
    sc_out< sc_lv<4> > mat_4_address0;
    sc_out< sc_logic > mat_4_ce0;
    sc_out< sc_logic > mat_4_we0;
    sc_out< sc_lv<32> > mat_4_d0;
    sc_out< sc_lv<4> > mat_4_address1;
    sc_out< sc_logic > mat_4_ce1;
    sc_out< sc_logic > mat_4_we1;
    sc_out< sc_lv<32> > mat_4_d1;
    sc_out< sc_lv<4> > mat_5_address0;
    sc_out< sc_logic > mat_5_ce0;
    sc_out< sc_logic > mat_5_we0;
    sc_out< sc_lv<32> > mat_5_d0;
    sc_out< sc_lv<4> > mat_5_address1;
    sc_out< sc_logic > mat_5_ce1;
    sc_out< sc_logic > mat_5_we1;
    sc_out< sc_lv<32> > mat_5_d1;
    sc_out< sc_lv<4> > mat_6_address0;
    sc_out< sc_logic > mat_6_ce0;
    sc_out< sc_logic > mat_6_we0;
    sc_out< sc_lv<32> > mat_6_d0;
    sc_out< sc_lv<4> > mat_6_address1;
    sc_out< sc_logic > mat_6_ce1;
    sc_out< sc_logic > mat_6_we1;
    sc_out< sc_lv<32> > mat_6_d1;
    sc_out< sc_lv<4> > mat_7_address0;
    sc_out< sc_logic > mat_7_ce0;
    sc_out< sc_logic > mat_7_we0;
    sc_out< sc_lv<32> > mat_7_d0;
    sc_out< sc_lv<4> > mat_7_address1;
    sc_out< sc_logic > mat_7_ce1;
    sc_out< sc_logic > mat_7_we1;
    sc_out< sc_lv<32> > mat_7_d1;
    sc_out< sc_lv<4> > mat_8_address0;
    sc_out< sc_logic > mat_8_ce0;
    sc_out< sc_logic > mat_8_we0;
    sc_out< sc_lv<32> > mat_8_d0;
    sc_out< sc_lv<4> > mat_8_address1;
    sc_out< sc_logic > mat_8_ce1;
    sc_out< sc_logic > mat_8_we1;
    sc_out< sc_lv<32> > mat_8_d1;
    sc_in< sc_lv<32> > lower_sum;
    sc_in< sc_lv<32> > upper_sum;


    // Module declarations
    makeZero(sc_module_name name);
    SC_HAS_PROCESS(makeZero);

    ~makeZero();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln49_fu_1216_p2;
    sc_signal< sc_lv<1> > icmp_ln49_reg_1222;
    sc_signal< sc_lv<4> > mat_1_addr_gep_fu_325_p3;
    sc_signal< sc_lv<4> > mat_2_addr_gep_fu_334_p3;
    sc_signal< sc_lv<4> > mat_3_addr_gep_fu_343_p3;
    sc_signal< sc_lv<4> > mat_4_addr_gep_fu_352_p3;
    sc_signal< sc_lv<4> > mat_5_addr_gep_fu_361_p3;
    sc_signal< sc_lv<4> > mat_6_addr_gep_fu_370_p3;
    sc_signal< sc_lv<4> > mat_7_addr_gep_fu_379_p3;
    sc_signal< sc_lv<4> > mat_8_addr_gep_fu_388_p3;
    sc_signal< sc_lv<4> > mat_2_addr_9_gep_fu_397_p3;
    sc_signal< sc_lv<4> > mat_3_addr_9_gep_fu_406_p3;
    sc_signal< sc_lv<4> > mat_4_addr_9_gep_fu_415_p3;
    sc_signal< sc_lv<4> > mat_5_addr_9_gep_fu_424_p3;
    sc_signal< sc_lv<4> > mat_6_addr_9_gep_fu_433_p3;
    sc_signal< sc_lv<4> > mat_7_addr_9_gep_fu_442_p3;
    sc_signal< sc_lv<4> > mat_8_addr_9_gep_fu_451_p3;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > mat_3_addr_10_gep_fu_622_p3;
    sc_signal< sc_lv<4> > mat_4_addr_10_gep_fu_631_p3;
    sc_signal< sc_lv<4> > mat_5_addr_10_gep_fu_640_p3;
    sc_signal< sc_lv<4> > mat_6_addr_10_gep_fu_649_p3;
    sc_signal< sc_lv<4> > mat_7_addr_10_gep_fu_658_p3;
    sc_signal< sc_lv<4> > mat_8_addr_10_gep_fu_667_p3;
    sc_signal< sc_lv<4> > mat_4_addr_11_gep_fu_676_p3;
    sc_signal< sc_lv<4> > mat_5_addr_11_gep_fu_685_p3;
    sc_signal< sc_lv<4> > mat_6_addr_11_gep_fu_694_p3;
    sc_signal< sc_lv<4> > mat_7_addr_11_gep_fu_703_p3;
    sc_signal< sc_lv<4> > mat_8_addr_11_gep_fu_712_p3;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > mat_5_addr_12_gep_fu_883_p3;
    sc_signal< sc_lv<4> > mat_6_addr_12_gep_fu_892_p3;
    sc_signal< sc_lv<4> > mat_7_addr_12_gep_fu_901_p3;
    sc_signal< sc_lv<4> > mat_8_addr_12_gep_fu_910_p3;
    sc_signal< sc_lv<4> > mat_6_addr_13_gep_fu_919_p3;
    sc_signal< sc_lv<4> > mat_7_addr_13_gep_fu_928_p3;
    sc_signal< sc_lv<4> > mat_8_addr_13_gep_fu_937_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > mat_7_addr_14_gep_fu_1108_p3;
    sc_signal< sc_lv<4> > mat_8_addr_14_gep_fu_1117_p3;
    sc_signal< sc_lv<4> > mat_8_addr_15_gep_fu_1126_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_icmp_ln49_fu_1216_p2();
    void thread_mat_0_address0();
    void thread_mat_0_address1();
    void thread_mat_0_ce0();
    void thread_mat_0_ce1();
    void thread_mat_0_d0();
    void thread_mat_0_d1();
    void thread_mat_0_we0();
    void thread_mat_0_we1();
    void thread_mat_1_addr_gep_fu_325_p3();
    void thread_mat_1_address0();
    void thread_mat_1_address1();
    void thread_mat_1_ce0();
    void thread_mat_1_ce1();
    void thread_mat_1_d0();
    void thread_mat_1_d1();
    void thread_mat_1_we0();
    void thread_mat_1_we1();
    void thread_mat_2_addr_9_gep_fu_397_p3();
    void thread_mat_2_addr_gep_fu_334_p3();
    void thread_mat_2_address0();
    void thread_mat_2_address1();
    void thread_mat_2_ce0();
    void thread_mat_2_ce1();
    void thread_mat_2_d0();
    void thread_mat_2_d1();
    void thread_mat_2_we0();
    void thread_mat_2_we1();
    void thread_mat_3_addr_10_gep_fu_622_p3();
    void thread_mat_3_addr_9_gep_fu_406_p3();
    void thread_mat_3_addr_gep_fu_343_p3();
    void thread_mat_3_address0();
    void thread_mat_3_address1();
    void thread_mat_3_ce0();
    void thread_mat_3_ce1();
    void thread_mat_3_d0();
    void thread_mat_3_d1();
    void thread_mat_3_we0();
    void thread_mat_3_we1();
    void thread_mat_4_addr_10_gep_fu_631_p3();
    void thread_mat_4_addr_11_gep_fu_676_p3();
    void thread_mat_4_addr_9_gep_fu_415_p3();
    void thread_mat_4_addr_gep_fu_352_p3();
    void thread_mat_4_address0();
    void thread_mat_4_address1();
    void thread_mat_4_ce0();
    void thread_mat_4_ce1();
    void thread_mat_4_d0();
    void thread_mat_4_d1();
    void thread_mat_4_we0();
    void thread_mat_4_we1();
    void thread_mat_5_addr_10_gep_fu_640_p3();
    void thread_mat_5_addr_11_gep_fu_685_p3();
    void thread_mat_5_addr_12_gep_fu_883_p3();
    void thread_mat_5_addr_9_gep_fu_424_p3();
    void thread_mat_5_addr_gep_fu_361_p3();
    void thread_mat_5_address0();
    void thread_mat_5_address1();
    void thread_mat_5_ce0();
    void thread_mat_5_ce1();
    void thread_mat_5_d0();
    void thread_mat_5_d1();
    void thread_mat_5_we0();
    void thread_mat_5_we1();
    void thread_mat_6_addr_10_gep_fu_649_p3();
    void thread_mat_6_addr_11_gep_fu_694_p3();
    void thread_mat_6_addr_12_gep_fu_892_p3();
    void thread_mat_6_addr_13_gep_fu_919_p3();
    void thread_mat_6_addr_9_gep_fu_433_p3();
    void thread_mat_6_addr_gep_fu_370_p3();
    void thread_mat_6_address0();
    void thread_mat_6_address1();
    void thread_mat_6_ce0();
    void thread_mat_6_ce1();
    void thread_mat_6_d0();
    void thread_mat_6_d1();
    void thread_mat_6_we0();
    void thread_mat_6_we1();
    void thread_mat_7_addr_10_gep_fu_658_p3();
    void thread_mat_7_addr_11_gep_fu_703_p3();
    void thread_mat_7_addr_12_gep_fu_901_p3();
    void thread_mat_7_addr_13_gep_fu_928_p3();
    void thread_mat_7_addr_14_gep_fu_1108_p3();
    void thread_mat_7_addr_9_gep_fu_442_p3();
    void thread_mat_7_addr_gep_fu_379_p3();
    void thread_mat_7_address0();
    void thread_mat_7_address1();
    void thread_mat_7_ce0();
    void thread_mat_7_ce1();
    void thread_mat_7_d0();
    void thread_mat_7_d1();
    void thread_mat_7_we0();
    void thread_mat_7_we1();
    void thread_mat_8_addr_10_gep_fu_667_p3();
    void thread_mat_8_addr_11_gep_fu_712_p3();
    void thread_mat_8_addr_12_gep_fu_910_p3();
    void thread_mat_8_addr_13_gep_fu_937_p3();
    void thread_mat_8_addr_14_gep_fu_1117_p3();
    void thread_mat_8_addr_15_gep_fu_1126_p3();
    void thread_mat_8_addr_9_gep_fu_451_p3();
    void thread_mat_8_addr_gep_fu_388_p3();
    void thread_mat_8_address0();
    void thread_mat_8_address1();
    void thread_mat_8_ce0();
    void thread_mat_8_ce1();
    void thread_mat_8_d0();
    void thread_mat_8_d1();
    void thread_mat_8_we0();
    void thread_mat_8_we1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
